continue
@user.collections
@user = User.find_by(user_name: params[:user_name])
continue
exit
Collection.all
@user.collections
@user = User.find_by(user_name: params[:user_name])
continue
    end
      render "new"
      flash.now.alert = "Email or password is incorrect"
    else
      redirect_to root_path, notice: "Logged In!"
      session[:user_id] = @user.id
    if @user && @user.authenticate(params[:password])
@user = User.find_by(user_name: params[:user_name])
session[:user_id] = @user.id
@user.id
@user
@user= User.find_by(user_name: "Hbot")
User.find_by(user_name: "Hbot")
User.all
Users.all
User.find_by(user_name: "Hbot")
User.find_by(user_name: "hbot")
User.find_by(user_name: hbot)
User.find_by(user_name: params[:user_name])
params
continue
exit
continue
@user = User.find_by(user_name: params[:user_name])
exit
twitter.get_tweets
puts twitter.methods.sort
twitter.methods
twitter
params
exit
twitter = TwitterApi.new
params
exit
user.authenticate(params[:password])
user = User.find_by(user_name: params[:user_name])
exit
@collection.valid?
next
exit
collection_params
params
collection_params
@collection
next
exit
@collection.valid?
collection_params
params
@collection
next
exit
@collection.private? = "f"
@collection.private? = "f
@collection.private? = "false"
@collection.private? = false
@collection.private?
@collection
exit
User.all
User.first
exit
collection=Collection.new
Controller
user=User.find(1)
exit
params
collection_params
params
exit
@user.valid?
@user = User.create(email_add: "bobbo@gmail.com", password: "password")
User
